name: Check Invoice Ninja version

#on:
#  schedule:
#    - cron:  '*/10 * * * *'
on: workflow_dispatch

jobs:
  version_check:
    name: Check IN version
    runs-on: ubuntu-latest
    steps:
      - name: Getting version of latest Docker tag
        id: jq
        uses: sergeysova/jq-action@v2
        with:
          cmd: |
            curl -L --fail "https://hub.docker.com/v2/repositories/michailkorenev/invoiceninja/tags/?page_size=1000" | jq '.results | .[] | .name' -r | sed 's/latest//' | sort -V | tail -n 1

      - name: Version check
        id: check
        run: |
          #NINJA_CURRENT="$(wget -T 15 -qO- https://raw.githubusercontent.com/invoiceninja/invoiceninja/v5-stable/VERSION.txt)"
          NINJA_CURRENT="5.3.24"
          NINJA_DOCKER=${{ steps.jq.outputs.value }}
          echo "NINJA_CURRENT: ${NINJA_CURRENT}"
          echo "NINJA_DOCKER: ${NINJA_DOCKER}"
          update_required="no"
          set -f
          array_ninja_installed=(${ninja_installed//./ })
          array_ninja_current=(${ninja_current//./ })
          if (( ${#array_ninja_installed[@]} == "2" ))
          then
            array_ninja_installed+=("0")
          fi
          for ((i=0; i<${#array_ninja_installed[@]}; i++))
          do
            if (( ${array_ninja_installed[$i]} < ${array_ninja_current[$i]} ))
            then
            update_required="yes"
            fi
          done
          echo ::set-output name=update_required::${update_required}
          echo ::set-output name=NINJA_CURRENT::${NINJA_CURRENT}
    outputs:
      NINJA_CURRENT: ${{ steps.check.outputs.NINJA_CURRENT }}
      update_required: ${{ steps.check.outputs.update_required }}

  call-publish-image:
    name: Call publish-image workflow
    needs: version_check
    if: needs.version_check.outputs.update_required == 'yes'  
    uses: michailkorenev/invoiceninja-dockerfiles/.github/workflows/publish-image.yaml@master
    with: 
      INVOICENINJA_VERSION: ${{ needs.version_check.outputs.NINJA_CURRENT }}

        